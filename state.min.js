(function(global,factory){typeof exports==="object"&&typeof module!=="undefined"?module.exports=factory():typeof define==="function"&&define.amd?define(factory):global.state=factory()})(this,function(){"use strict";const listeners={};const history=[];const basicTypes=["boolean","number","null","undefined","string"];const getProxy=(stack=[])=>(target,property)=>{if(property in target){return target[property]}if(typeof property==="symbol"){return target[property]}if("_____history"===property){return history}if("_____listeners"===property){return listeners}if(/^\$/.test(property)){const key=[...stack.map(one=>one.property),property.slice(1)].join(".");const current=key.split(".").reduce((state,prop)=>state[prop],state);listeners[key]=listeners[key]||[];return(callback,def)=>{listeners[key].push(callback);if(!callback.setState){return callback(current)}return callback}}};const setProxy=(stack=[])=>(target,property,value)=>{if(/^\$/.test(property)){throw new Error("The keys that start by $ are reserved and should not be set manually.")}if(/^\_\_/.test(property)){throw new Error("The keys that start by __ (two underscores) are reserved and should not be set manually.")}const key=[...stack.map(one=>one.property),property].join(".");history.push({key:key,value:value,explicit:property!=="length",time:(new Date).getTime()});target[property]=value;localStorage.setItem("_____state",JSON.stringify({time:Math.floor((new Date).getTime()/1e3),data:state}));const proxify=(value,stack)=>{if(basicTypes.includes(typeof value)){return value}if(Array.isArray(value)){value=value.map((value,property,target)=>{return proxify(value,[...stack,{target:target,property:property,value:value}])})}if(/^\{/.test(JSON.stringify(value))){for(let property in value){const current={target:target,property:property,value:value[property]};value[property]=proxify(value[property],[...stack,current])}}return new Proxy(value,{get:getProxy(stack),set:setProxy(stack),deleteProperty:delProxy(stack)})};target[property]=proxify(value,[...stack,{target:target,property:property,value:value}]);[...stack,{target:target,property:property,value:value}].forEach((one,i,all)=>{const key=all.slice(0,i+1).map(one=>one.property).join(".");if(listeners[key]){const current=key.split(".").reduce((state,prop)=>state[prop],state);listeners[key].forEach(one=>{if(one&&one.setState){return one.setState({__state:Math.random()})}one(current)})}});return true};const delProxy=(stack=[])=>(target,property)=>{if(/^\$/.test(property)){throw new Error("The keys that start by $ are reserved and should not be set manually.")}if(/^\_\_/.test(property)){throw new Error("The keys that start by __ (two underscores) are reserved and should not be set manually.")}const key=[...stack.map(one=>one.property),property].join(".");history.push({key:key,type:"delete",explicit:property!=="length",time:(new Date).getTime()});delete target[property];localStorage.setItem("_____state",JSON.stringify({time:Math.floor((new Date).getTime()/1e3),data:state}));[...stack,{target:target,property:property}].forEach((one,i,all)=>{const key=all.slice(0,i+1).map(one=>one.property).join(".");if(listeners[key]){const current=key.split(".").reduce((state,prop)=>state[prop],state);listeners[key].forEach(one=>one(current))}});return true};const state=new Proxy({},{get:getProxy(),set:setProxy(),deleteProperty:delProxy()});const stored=JSON.parse(localStorage.getItem("_____state")||"{}");if(stored&&stored.data){for(let key in stored.data){state[key]=stored.data[key]}}return state});